name: Unit Tests

on:
  push:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}â€‘${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python: ['3.11', '3.12']

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python }} + Poetry cache
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Update pip
        run: pip install --upgrade pip

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-v3
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        run: pipx install "poetry>=2.1.4"

      - name: Clear Poetry cache
        run: poetry cache clear pypi --all -n

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-v3-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install mlx
        run: poetry run pip install "mlx==0.28.0" "mlx-lm==0.26.3"

      - name: Install dependencies
        id: install-deps
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --extras "test"

      - name: Run tests with coverage analysis
        run: poetry run pytest --cov=src/ --cov-report=xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          format: cobertura
          file: coverage.xml
          flag-name: unit test
          parallel: true
          fail-on-error: true

  finish:
    if: ${{ always() }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
